{"ast":null,"code":"import _classCallCheck from \"/Users/cgreen/Desktop/bootcamp/click-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cgreen/Desktop/bootcamp/click-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cgreen/Desktop/bootcamp/click-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cgreen/Desktop/bootcamp/click-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cgreen/Desktop/bootcamp/click-game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cgreen/Desktop/bootcamp/click-game/src/components/Counter.js\";\nimport React from \"react\";\n\nvar Counter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Counter, _React$Component);\n\n  // Setting the initial state of the Counter component\n  function Counter() {\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    //what function does super trigger?\n    //the parent constructor function gets triggered \n    //React.Component's constructor function\n    // you need super() here to be able to establish state in this component\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Counter).call(this)); //it's always this.state here \n\n    _this.handleIncrement = function () {\n      //one way   \n      _this.setState({\n        count: _this.state.count + 1\n      });\n    };\n\n    _this.state = {\n      count: 0,\n      name: 'Simon'\n    };\n    return _this;\n  } //   images={[\n  //     {src: '../public/assets/images/image1.png', clicks: 0},\n  //     {src: '../public/assets/images/image1.png', clicks: 0}\n  // ]}\n  // handleIncrement increments this.state.count by 1\n\n\n  _createClass(Counter, [{\n    key: \"render\",\n    // The render method returns the JSX that should be rendered\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"card text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header bg-primary text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Click Counter! \", this.state.name), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Click Count: \", this.state.count), React.createElement(\"img\", {\n        src: \"../public/assets/images/image1.png\",\n        style: \"width:300px;\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: this.handleIncrement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Increment\")));\n    }\n  }]);\n\n  return Counter;\n}(React.Component);\n\nexport default Counter;","map":{"version":3,"sources":["/Users/cgreen/Desktop/bootcamp/click-game/src/components/Counter.js"],"names":["React","Counter","handleIncrement","setState","count","state","name","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAGMC,O;;;;;AACJ;AAEA,qBAAc;AAAA;;AAAA;;AACZ;AACE;AACE;AAEJ;AACA,kFANY,CAQZ;;AARY,UA0BdC,eA1Bc,GA0BI,YAAM;AACtB;AACE,YAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAE,MAAKC,KAAL,CAAWD,KAAX,GAAmB;AAA5B,OAAd;AAEH,KA9Ba;;AASZ,UAAKC,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAG,CADG;AAEXE,MAAAA,IAAI,EAAG;AAFI,KAAb;AATY;AAcb,G,CAGH;AACA;AACA;AAEA;AAIE;;;;;AAOA;6BACS;AACP,aACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACkB,KAAKD,KAAL,CAAWC,IAD7B,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAuC,KAAKD,KAAL,CAAWD,KAAlD,CADF,EAGE;AAAK,QAAA,GAAG,EAAC,oCAAT;AAA8C,QAAA,KAAK,EAAC,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAOE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAE,KAAKF,eAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPF,CAJF,CADF;AAoBD;;;;EAzDmBF,KAAK,CAACO,S;;AA4D5B,eAAeN,OAAf","sourcesContent":["import React from \"react\";\r\n\r\n\r\nclass Counter extends React.Component {\r\n  // Setting the initial state of the Counter component\r\n\r\n  constructor() {\r\n    //what function does super trigger?\r\n      //the parent constructor function gets triggered \r\n        //React.Component's constructor function\r\n\r\n    // you need super() here to be able to establish state in this component\r\n    super();\r\n\r\n    //it's always this.state here \r\n    this.state = {\r\n      count : 0,\r\n      name : 'Simon'\r\n    };\r\n\r\n  }\r\n\r\n\r\n//   images={[\r\n//     {src: '../public/assets/images/image1.png', clicks: 0},\r\n//     {src: '../public/assets/images/image1.png', clicks: 0}\r\n\r\n// ]}\r\n\r\n\r\n\r\n  // handleIncrement increments this.state.count by 1\r\n  handleIncrement = () => {\r\n    //one way   \r\n      this.setState({ count: this.state.count + 1 });\r\n\r\n  }\r\n\r\n  // The render method returns the JSX that should be rendered\r\n  render() {\r\n    return (\r\n      <div className=\"card text-center\">\r\n        <div className=\"card-header bg-primary text-white\">\r\n          Click Counter! {this.state.name}\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <p className=\"card-text\">Click Count: {this.state.count}</p>\r\n\r\n          <img src=\"../public/assets/images/image1.png\" style=\"width:300px;\"/>\r\n\r\n\r\n\r\n          <button className=\"btn btn-primary\" onClick={this.handleIncrement}>\r\n            Increment\r\n          </button>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n"]},"metadata":{},"sourceType":"module"}